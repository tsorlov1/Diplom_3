{"name": "Проверка перехода по клику на «Лента заказов»", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=126.0.6478.127)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6CD13EEA2+31554]\n\t(No symbol) [0x00007FF6CD0B7ED9]\n\t(No symbol) [0x00007FF6CCF7872A]\n\t(No symbol) [0x00007FF6CCF4D995]\n\t(No symbol) [0x00007FF6CCFF44D7]\n\t(No symbol) [0x00007FF6CD00C051]\n\t(No symbol) [0x00007FF6CCFECDD3]\n\t(No symbol) [0x00007FF6CCFBA33B]\n\t(No symbol) [0x00007FF6CCFBAED1]\n\tGetHandleVerifier [0x00007FF6CD448B1D+3217341]\n\tGetHandleVerifier [0x00007FF6CD495AE3+3532675]\n\tGetHandleVerifier [0x00007FF6CD48B0E0+3489152]\n\tGetHandleVerifier [0x00007FF6CD1EE776+750614]\n\t(No symbol) [0x00007FF6CD0C375F]\n\t(No symbol) [0x00007FF6CD0BEB14]\n\t(No symbol) [0x00007FF6CD0BECA2]\n\t(No symbol) [0x00007FF6CD0AE16F]\n\tBaseThreadInitThunk [0x00007FFB6F917344+20]\n\tRtlUserThreadStart [0x00007FFB70A626B1+33]", "trace": "self = <tests.test_main_functionality.TestMainFunctionality object at 0x0000023CDF8228A0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6cadd5962f79023c659a056e24a3019d\")>\n\n    @allure.title('Проверка перехода по клику на «Лента заказов»')\n    def test_orders_feed_transition(self, driver):\n        main_page = MainPage(driver)\n>       main_page.click_orders_feed_button()\n\ntests\\test_main_functionality.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\main_page.py:17: in click_orders_feed_button\n    self.click_element(MainPageLocators.BUTTON_ORDERS_FEED)\npages\\base_page.py:11: in click_element\n    self.driver.find_element(*locator).click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000023CDF939910>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...07FF6CD0AE16F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFB6F917344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFB70A626B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=126.0.6478.127)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6CD13EEA2+31554]\nE       \t(No symbol) [0x00007FF6CD0B7ED9]\nE       \t(No symbol) [0x00007FF6CCF7872A]\nE       \t(No symbol) [0x00007FF6CCF4D995]\nE       \t(No symbol) [0x00007FF6CCFF44D7]\nE       \t(No symbol) [0x00007FF6CD00C051]\nE       \t(No symbol) [0x00007FF6CCFECDD3]\nE       \t(No symbol) [0x00007FF6CCFBA33B]\nE       \t(No symbol) [0x00007FF6CCFBAED1]\nE       \tGetHandleVerifier [0x00007FF6CD448B1D+3217341]\nE       \tGetHandleVerifier [0x00007FF6CD495AE3+3532675]\nE       \tGetHandleVerifier [0x00007FF6CD48B0E0+3489152]\nE       \tGetHandleVerifier [0x00007FF6CD1EE776+750614]\nE       \t(No symbol) [0x00007FF6CD0C375F]\nE       \t(No symbol) [0x00007FF6CD0BEB14]\nE       \t(No symbol) [0x00007FF6CD0BECA2]\nE       \t(No symbol) [0x00007FF6CD0AE16F]\nE       \tBaseThreadInitThunk [0x00007FFB6F917344+20]\nE       \tRtlUserThreadStart [0x00007FFB70A626B1+33]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchWindowException"}, "steps": [{"name": "Нажать на кнопку \"Лента заказов\"", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=126.0.6478.127)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6CD13EEA2+31554]\n\t(No symbol) [0x00007FF6CD0B7ED9]\n\t(No symbol) [0x00007FF6CCF7872A]\n\t(No symbol) [0x00007FF6CCF4D995]\n\t(No symbol) [0x00007FF6CCFF44D7]\n\t(No symbol) [0x00007FF6CD00C051]\n\t(No symbol) [0x00007FF6CCFECDD3]\n\t(No symbol) [0x00007FF6CCFBA33B]\n\t(No symbol) [0x00007FF6CCFBAED1]\n\tGetHandleVerifier [0x00007FF6CD448B1D+3217341]\n\tGetHandleVerifier [0x00007FF6CD495AE3+3532675]\n\tGetHandleVerifier [0x00007FF6CD48B0E0+3489152]\n\tGetHandleVerifier [0x00007FF6CD1EE776+750614]\n\t(No symbol) [0x00007FF6CD0C375F]\n\t(No symbol) [0x00007FF6CD0BEB14]\n\t(No symbol) [0x00007FF6CD0BECA2]\n\t(No symbol) [0x00007FF6CD0AE16F]\n\tBaseThreadInitThunk [0x00007FFB6F917344+20]\n\tRtlUserThreadStart [0x00007FFB70A626B1+33]\n\n", "trace": "  File \"F:\\Обучение\\Тестировщик\\Diplom\\Diplom_3\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"F:\\Обучение\\Тестировщик\\Diplom\\Diplom_3\\pages\\main_page.py\", line 17, in click_orders_feed_button\n    self.click_element(MainPageLocators.BUTTON_ORDERS_FEED)\n  File \"F:\\Обучение\\Тестировщик\\Diplom\\Diplom_3\\pages\\base_page.py\", line 11, in click_element\n    self.driver.find_element(*locator).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"F:\\Обучение\\Тестировщик\\Diplom\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 748, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"F:\\Обучение\\Тестировщик\\Diplom\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"F:\\Обучение\\Тестировщик\\Diplom\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1720074305586, "stop": 1720074305588}], "start": 1720074305585, "stop": 1720074305591, "uuid": "387245b8-4a58-48ea-b49e-1219a4e715eb", "historyId": "2b8ac5df040175a23dfa3710058ec600", "testCaseId": "2b8ac5df040175a23dfa3710058ec600", "fullName": "tests.test_main_functionality.TestMainFunctionality#test_orders_feed_transition", "labels": [{"name": "feature", "value": "Проверка «Личный кабинет»"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_functionality"}, {"name": "subSuite", "value": "TestMainFunctionality"}, {"name": "host", "value": "DESKTOP-9ENBRFN"}, {"name": "thread", "value": "884-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_functionality"}]}